{
  "name": "nuxt-app",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nuxt build",
    "dev": "nuxt dev",
    "postinstall": "nuxt prepare",
    "generate": "nuxt generate",
    "preview": "npx nuxthub preview",
    "deploy": "npx nuxthub deploy",
    "lint": "eslint .",
    "test": "vitest",
    "db:generate": "drizzle-kit generate",
    "docs": "pnpm run docs:dev",
    "docs:dev": "vitepress dev .",
    "docs:build": "echo 'Skipping `pnpm run docs:build-api`' && echo 'Skipping `pnpm run docs:build-glossary`' && echo 'Skipping `pnpm run docs:build-sidebar`' && npx vitepress build .",
    "docs:build-api": "echo 'Skipping `pnpm run docs:build-api-content`' && pnpm run docs:build-api-fragments && NODE_OPTIONS='--max-old-space-size=32768' npx typedoc --logLevel Verbose && pnpm run docs:build-api-flow",
    "docs:build-api-fragments": "ls -1 app/fragments/*.ts >/tmp/fragments && cat /tmp/fragments | grep -E '^app/fragments/[A-Z]' | sed -Ee 's/^app\\/fragments\\/(\\w+)\\.ts$/export { \\1 } from \"..\\/app\\/fragments\\/\\1\";/' >gen/fragment-reexports-for-typedoc.ts && echo 'export const allFragmentNames = [' >gen/fragment-names-for-typedoc.ts && cat /tmp/fragments | grep -E '^app/fragments/[A-Z]' | sed -Ee 's/^app\\/fragments\\/(\\w+)\\.ts$/  \"\\1\",/' >>gen/fragment-names-for-typedoc.ts && echo ']' >>gen/fragment-names-for-typedoc.ts && echo \"# Here is a list of all available fragment classes:\\n\" >docs/fragment-classes.md && cat /tmp/fragments | grep -E '^app/fragments/[A-Z]' | sed -E -e 's/^app\\/fragments\\/(\\w+)\\.ts$/- \\1/' >>docs/fragment-classes.md",
    "docs:build-api-flow": "echo '<!--@include: ../flow/README.md-->' >docs/api/flow-dsl.md",
    "docs:build-api-content": "node scripts/gen-content-docs-exports.js",
    "docs:build-api-md": "node scripts/gen-docs-api.js",
    "docs:build-sidebar": "node scripts/gen-docs-sidebar.js",
    "docs:build-glossary": "node scripts/gen-docs-glossary.js",
    "docs:preview": "npx vitepress preview .",
    "docs:zip": "tar -czf .vitepress/docs.tar.gz .vitepress/docs/",
    "docs:upload": "curl -X PUT -H 'Content-Type: application/gzip' --data-binary '@.vitepress/docs.tar.gz'",
    "docs:upload-local": "pnpm run docs:upload http://localhost:3000/docs",
    "scripts": "cd scripts && npx tsc",
    "workers": "cd workers && npx tsc"
  },
  "dependencies": {
    "@langchain/anthropic": "^0.3.18",
    "@langchain/community": "^0.3.41",
    "@langchain/core": "^0.3.45",
    "@langchain/deepseek": "^0.0.1",
    "@langchain/google-genai": "^0.2.4",
    "@langchain/mistralai": "^0.2.0",
    "@langchain/openai": "^0.5.5",
    "@nuxt/eslint": "^1.3.0",
    "@nuxthub/core": "^0.9.0",
    "@vueuse/nuxt": "13.3.0",
    "change-case": "^5.4.4",
    "drizzle-orm": "^0.42.0",
    "jsondiffpatch": "^0.7.3",
    "jsonrepair": "^3.12.0",
    "nuxt": "^3.16.2",
    "nuxt-jsoneditor": "1.8.4",
    "vue": "^3.5.13",
    "vue-router": "^4.5.0"
  },
  "devDependencies": {
    "@nuxt/eslint-config": "^1.3.0",
    "@nuxt/kit": "^3.17.5",
    "chokidar": "^4.0.3",
    "drizzle-kit": "^0.31.0",
    "eslint": "^9.25.1",
    "json-schema-to-ts": "^3.1.1",
    "pathe": "^2.0.3",
    "typescript": "^5.8.3",
    "vitepress": "^1.6.3",
    "vue-tsc": "^2.2.10",
    "wrangler": "^4.20.0",
    "yaml": "^2.8.0"
  },
  "packageManager": "pnpm@10.9.0",
  "pnpm": {
    "onlyBuiltDependencies": [
      "@parcel/watcher",
      "esbuild",
      "sharp",
      "workerd"
    ]
  }
}